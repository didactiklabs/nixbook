name: Build Nishinoya
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get Nixpkgs revision for nixfmt
        run: |
          # This should not be a URL, because it would allow PRs to run arbitrary code in CI!
          url=$(jq -r .pins.nixpkgs.url npins/sources.json)
          echo "url=$url" >> "$GITHUB_ENV"
      - uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
        with:
          nix_path: nixpkgs=${{ env.url }}
      - name: Create /etc/nixos and copy hardware config
        run: |
          sudo mkdir -p /etc/nixos
          sudo sh -c 'cat > /etc/nixos/hardware-configuration.nix <<EOF
          {
            fileSystems."/" = {
              device = "/dev/disk/by-uuid/dummy";
              fsType = "ext4";
            };
          }
          EOF'
      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ secrets.ATTIC_CACHE }}
          token: ${{ secrets.ATTIC_TOKEN }}
      - name: Build
        run: nix-build '<nixpkgs/nixos>' -A config.system.build.toplevel -I nixos-config=profiles/nishinoya/configuration.nix
      - name: Push
        run: |
          attic push didactiklabs ./result
